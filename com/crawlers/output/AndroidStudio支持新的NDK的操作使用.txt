<div class="post">
<h1 class="postTitle">
<a class="postTitle2" href="http://www.cnblogs.com/zhuyuliang/p/5007016.html" id="cb_post_title_url">AndroidStudio支持新的NDK的操作使用</a>
</h1>
<div class="clear"></div>
<div class="postBody">
<div id="cnblogs_post_body"><p><br/><span class="copied inactive" data-aligning="#tran_0,#src_0"><span class="copied inactive" data-aligning="#tran_0,#src_0">在2015的Google I / O大会,5月底,谷歌宣布了一项新的支持由Android NDK Studio 1.3,Jetbrains CLion集成功能,Android gradle插件。<span class="copied" data-aligning="#tran_1,#src_1">这种支持只在7月已经发布,虽然很有前途,还是在沉重的发展。</span></span></span></p>
<p><span class="copied" data-aligning="#tran_1,#src_1">新的工具包支持需要使用Android Studio 1.3 RC1 +和Android gradle-experimental插件。</span></p>
<div><span class="copied" data-aligning="#tran_1,#src_1"><span class="copied" data-aligning="#tran_0,#src_0" id="tran_0">gradle-experimental插件需要使用gradle - 2.6或更高版本。</span></span></div>
<div><span style="color: #666666;">1.应用设置gradle版本</span></div>
<div><span class="copied" data-aligning="#tran_1,#src_1"><span class="copied" data-aligning="#tran_0,#src_0"><iframe frameborder="0" id="iframe_0.7795352617798095" scrolling="no" src="data:text/html;charset=utf8,%3Cstyle%3Ebody%7Bmargin:0;padding:0%7D%3C/style%3E%3Cimg%20id=%22img%22%20src=%22http://ph0b.com/wp-content/uploads/2015/08/gradle-2-5.png?_=5007016%22%20style=%22border:none;max-width:848px%22%3E%3Cscript%3Ewindow.onload%20=%20function%20()%20%7Bvar%20img%20=%20document.getElementById('img');%20window.parent.postMessage(%7BiframeId:'iframe_0.7795352617798095',width:img.width,height:img.height%7D,%20'http://www.cnblogs.com');%7D%3C/script%3E" style="border: none; width: 507px; height: 374px;"></iframe><br/></span></span></div>
<div><span class="copied" data-aligning="#tran_1,#src_1"><span class="copied" data-aligning="#tran_0,#src_0">2.文本设置gradle版本</span></span></div>
<div><span class="copied" data-aligning="#tran_1,#src_1"><span class="copied" data-aligning="#tran_0,#src_0"><em>gradle/wrapper/gradle-wrapper.properties:</em><br/></span></span></div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code">
<pre>distributionUrl=https\:<span style="color: #008000;">//</span><span style="color: #008000;">services.gradle.org/distributions/gradle-2.6-all.zip</span></pre>
</div>
</div>
</div>
</div>
<div>然后,改变对android的引用gradle新gradle-experimental插件,插件。/ build.gradle:</div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div>
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Top-level build file where you can add configuration options common to all sub-projects/modules.</span>
<span style="color: #000000;"> 
buildscript {
repositories {
jcenter()
}
dependencies {
classpath </span>'com.android.tools.build:gradle-experimental:0.3.0-alpha5'<span style="color: #000000;">
}
}</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div></div>
</div>
</div>
</div>
<div><span class="copied inactive" data-aligning="#tran_0,#src_0" id="tran_0">你需要修改build.<span class="copied" data-aligning="#tran_1,#src_1" id="tran_1">gradle文件来使用这些新的插件。<span class="copied" data-aligning="#tran_2,#src_2" id="tran_2">这是相同的配置的一个例子,老的DSL(顶部)和新(底部):<br/></span></span></span></div>
</div>
<div><span style="color: #666666; font-family: Tahoma, Arial;">old DSL</span></div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div>
<pre>apply plugin: 'com.android.application'<span style="color: #000000;">
 
android {
compileSdkVersion rootProject.ext.compileSdkVersion
buildToolsVersion rootProject.ext.buildToolsVersion
 
defaultConfig {
applicationId </span>"com.ph0b.example"<span style="color: #000000;">
minSdkVersion </span>15<span style="color: #000000;">
targetSdkVersion </span>23<span style="color: #000000;">
versionCode </span>4<span style="color: #000000;">
versionName </span>"1.0.1"<span style="color: #000000;">
 
ndk {
moduleName </span>"mymodule"<span style="color: #000000;">
ldLibs </span>"log"<span style="color: #000000;">
stl </span>"gnustl_static"<span style="color: #000000;">
cFlags </span>"-std=c++11 -fexceptions"<span style="color: #000000;">
}
}
 
signingConfigs {
release {
storeFile file(STORE_FILE)
storePassword STORE_PASSWORD
keyAlias KEY_ALIAS
keyPassword KEY_PASSWORD
}
}
 
buildTypes {
release {
minifyEnabled </span><span style="color: #0000ff;">true</span><span style="color: #000000;">
shrinkResources </span><span style="color: #0000ff;">true</span><span style="color: #000000;">
proguardFiles getDefaultProguardFile(</span>'proguard-android-optimize.txt'), 'proguard-rules.txt'<span style="color: #000000;">
signingConfig signingConfigs.release
}
debug {
jniDebuggable </span><span style="color: #0000ff;">true</span><span style="color: #000000;">
}
}
}
 
dependencies {
compile </span>'com.android.support:support-v4:23.0.1'<span style="color: #000000;">
compile fileTree(dir: </span>'libs', include: ['*.jar'<span style="color: #000000;">])
}</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div></div>
<p> </p>
</div>
</div>
</div>
<div>new DSL</div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div>
<pre>apply plugin: 'com.android.model.application'<span style="color: #000000;">
 
model {
android {
compileSdkVersion </span>=<span style="color: #000000;"> rootProject.ext.compileSdkVersion
buildToolsVersion </span>=<span style="color: #000000;"> rootProject.ext.buildToolsVersion
 
defaultConfig.with {
applicationId </span>= "com.ph0b.example"<span style="color: #000000;">
minSdkVersion.apiLevel </span>= 15<span style="color: #000000;">
targetSdkVersion.apiLevel </span>= 23<span style="color: #000000;">
versionCode </span>= 4<span style="color: #000000;">
versionName </span>= "1.0.1"<span style="color: #000000;">
}
}
 
android.ndk {
moduleName </span>= "mymodule"<span style="color: #000000;">
ldLibs </span>+= ['log'<span style="color: #000000;">]
cppFlags </span>+= "-std=c++11"<span style="color: #000000;">
cppFlags </span>+= "-fexceptions"<span style="color: #000000;">
stl </span>= 'gnustl_shared'<span style="color: #000000;">
}
 
android.signingConfigs {
create(</span>"release"<span style="color: #000000;">) {
keyAlias </span>=<span style="color: #000000;"> KEY_ALIAS
keyPassword </span>=<span style="color: #000000;"> STORE_PASSWORD
storeFile </span>=<span style="color: #000000;"> file(STORE_FILE)
storePassword </span>=<span style="color: #000000;"> KEY_PASSWORD
}
}
 
android.buildTypes {
release {
minifyEnabled </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">
shrinkResources </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">
proguardFiles </span>+= file('proguard-rules.txt'<span style="color: #000000;">)
</span><span style="color: #008000;">//</span><span style="color: #008000;"> signingConfig = signingConfigs.release </span><span style="color: #008000;">//</span><span style="color: #008000;">not activated yet because of </span><span style="color: #008000; text-decoration: underline;">https://code.google.com/p/android/issues/detail?id=182249</span>
<span style="color: #000000;">}
}
}
 
dependencies {
compile </span>'com.android.support:support-v4:23.0.1'<span style="color: #000000;">
compile fileTree(dir: </span>'libs', include: ['*.jar'<span style="color: #000000;">])
}</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div></div>
<p> </p>
</div>
</div>
</div>
<div>总的改变在所有android的声明在modle{}内，各个变量的赋值使用显示的"="，数组不能被复写（用+=），变量和其他新配置必须使用声明''创建（）'比如xxxSdkVersion改为xxxSdkVersion.apiLevel属性。</div>
</div>
</div>
<div><span class="copied" data-aligning="#tran_2,#src_2">你可以在DSL进行配置NDK，默认就可以不使用Android.mk老配置了.</span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2"> </span></div>
<div><strong><span style="color: #666666; font-family: Tahoma, Arial;"><span data-wiz-span="data-wiz-span">开始新的</span></span><span data-wiz-span="data-wiz-span">c++ / NDK支持<span data-wiz-span="data-wiz-span">AndroidStudio</span></span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span">1.首先在build.gradle配置NDK模块的声明来激活</span></strong>c++ / NDK支持</div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div>
<pre><span style="color: #000000;">model {
</span><span style="color: #008000;">//</span><span style="color: #008000;">...</span>
<span style="color: #000000;">android.ndk {
moduleName </span>= "mymodule"<span style="color: #000000;">
}
}</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div></div>
</div>
</div>
</div>
<div>2.完成这步你就可以在Java文件下创建一个方法带Native关键字，并且按ALT+Enter来生成C++,实现：</div>
<div><iframe frameborder="0" id="iframe_0.9266446128185404" scrolling="no" src="data:text/html;charset=utf8,%3Cstyle%3Ebody%7Bmargin:0;padding:0%7D%3C/style%3E%3Cimg%20id=%22img%22%20src=%22http://ph0b.com/wp-content/uploads/2015/08/AS-ndk-demo1.gif?_=5007016%22%20style=%22border:none;max-width:848px%22%3E%3Cscript%3Ewindow.onload%20=%20function%20()%20%7Bvar%20img%20=%20document.getElementById('img');%20window.parent.postMessage(%7BiframeId:'iframe_0.9266446128185404',width:img.width,height:img.height%7D,%20'http://www.cnblogs.com');%7D%3C/script%3E" style="border: none; width: 660px; height: 370px;"></iframe></div>
</div>
<div><strong><span data-wiz-span="data-wiz-span"> </span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span">就这么简单方便。</span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span"> </span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span">实现的cpp文件将被添加在jni文件夹中。</span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span"> </span></strong></div>
<div><strong><span data-wiz-span="data-wiz-span">为了使用NDK模块，这里google提供了github的例子</span></strong><a href="https://github.com/googlesamples/android-ndk">https://github.com/googlesamples/android-ndk</a></div>
<div> </div>
<div>下面是你配置ndk需要的所有配置：</div>
<div>
<div>
<div class="linenums">
<div class="L0">
<div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div>
<pre><span style="color: #000000;">android.ndk {
moduleName </span>= "mymodule"<span style="color: #000000;">
ldLibs </span>+= ['log'<span style="color: #000000;">]
ldFlags </span>+= ""<span style="color: #000000;">
toolchain </span>= "clang"<span style="color: #000000;">
toolchainVersion </span>= "3.9"<span style="color: #000000;">
abiFilters </span>+= "x86"<span style="color: #000000;">
CFlags </span>+= ""<span style="color: #000000;">
cppFlags </span>+= ""<span style="color: #000000;">
debuggable </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">
renderscriptNdkMode </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">
stl </span>= "system"<span style="color: #000000;">
platformVersion </span>= 15<span style="color: #000000;">
}</span></pre>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a href="javascript:void(0);" onclick="copyCnblogsCode(this)" title="复制代码"><img alt="复制代码" src="//common.cnblogs.com/images/copycode.gif"/></a></span></div></div>
<p> </p>
</div>
</div>
</div>
<div>NDK项目的调试</div>
</div>
<div><strong><span data-wiz-span="data-wiz-span"> </span></strong></div>
<div><span class="copied" data-aligning="#tran_0,#src_0" id="tran_0">Android Studio 1.3 +支持LLDB和GDB后端<span class="copied" data-aligning="#tran_1,#src_1" id="tran_1">的调试功能,创建和使用一个新的从Android原生“运行/调试配置默认值:<strong><span data-wiz-span="data-wiz-span"><br/></span></strong></span></span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2"><iframe frameborder="0" id="iframe_0.4822162760225841" scrolling="no" src="data:text/html;charset=utf8,%3Cstyle%3Ebody%7Bmargin:0;padding:0%7D%3C/style%3E%3Cimg%20id=%22img%22%20src=%22http://ph0b.com/wp-content/uploads/2015/08/native-debug-config.png?_=5007016%22%20style=%22border:none;max-width:848px%22%3E%3Cscript%3Ewindow.onload%20=%20function%20()%20%7Bvar%20img%20=%20document.getElementById('img');%20window.parent.postMessage(%7BiframeId:'iframe_0.4822162760225841',width:img.width,height:img.height%7D,%20'http://www.cnblogs.com');%7D%3C/script%3E" style="border: none; width: 741px; height: 480px;"></iframe><br/></span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2">使用你的debug调试你的NDK,默认设置debugable标志totrue.</span></div>
<div> </div>
<div> </div>
<div>
<ul>
<li><span style="color: #333333; font-family: 'Noto Serif', serif;">转译至http://ph0b.com/new-android-studio-ndk-support/</span></li>
</ul>
</div>
<div><span class="copied" data-aligning="#tran_2,#src_2"> </span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2"> </span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2"> </span></div>
<div><span class="copied" data-aligning="#tran_2,#src_2"> </span></div>
</div></div><div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
<div id="BlogPostCategory"></div>
<div id="EntryTag">标签: <a href="http://www.cnblogs.com/zhuyuliang/tag/AndroidStudio/">AndroidStudio</a></div>
<div id="blog_post_info"><div id="green_channel">
<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(5007016,cb_blogId,1);green_channel_success(this,'谢谢推荐！');">好文要顶</a>
<a href="javascript:void(0);" id="green_channel_follow" onclick="follow('049fbf73-4db7-e311-8d02-90b11c0b17d6');">关注我</a>
<a href="javascript:void(0);" id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;">收藏该文</a>
<a href="javascript:void(0);" id="green_channel_weibo" onclick="ShareToTsina()" title="分享至新浪微博"><img alt="" src="//common.cnblogs.com/images/icon_weibo_24.png"/></a>
<a href="javascript:void(0);" id="green_channel_wechat" onclick="shareOnWechat()" title="分享至微信"><img alt="" src="//common.cnblogs.com/images/wechat.png"/></a>
</div>
<div id="author_profile">
<div class="author_profile_info" id="author_profile_info">
<a href="http://home.cnblogs.com/u/zhuyuliang/" target="_blank"><img alt="" class="author_avatar" src="//pic.cnblogs.com/face/618582/20150505091020.png"/></a>
<div class="author_profile_info" id="author_profile_detail">
<a href="http://home.cnblogs.com/u/zhuyuliang/">zhuyuliang</a><br/>
<a href="http://home.cnblogs.com/u/zhuyuliang/followees">关注 - 12</a><br/>
<a href="http://home.cnblogs.com/u/zhuyuliang/followers">粉丝 - 2</a>
</div>
</div>
<div class="clear"></div>
<div id="author_profile_honor"></div>
<div id="author_profile_follow">
<a href="javascript:void(0);" onclick="follow('049fbf73-4db7-e311-8d02-90b11c0b17d6');return false;">+加关注</a>
</div>
</div>
<div id="div_digg">
<div class="diggit" onclick="votePost(5007016,'Digg')">
<span class="diggnum" id="digg_count">1</span>
</div>
<div class="buryit" onclick="votePost(5007016,'Bury')">
<span class="burynum" id="bury_count">0</span>
</div>
<div class="clear"></div>
<div class="diggword" id="digg_tips">
</div>
</div>
</div>
<div class="clear"></div>
<div id="post_next_prev"><a class="p_n_p_prefix" href="http://www.cnblogs.com/zhuyuliang/p/5212746.html">» </a> 下一篇：<a href="http://www.cnblogs.com/zhuyuliang/p/5212746.html" title="发布于2016-02-24 14:06">Java设计模式-Builder生成器模式</a><br/></div>
</div>
</div>
<div class="postDesc">posted @ <span id="post-date">2015-11-30 14:12</span> <a href="http://www.cnblogs.com/zhuyuliang/">zhuyuliang</a> 阅读(<span id="post_view_count">4450</span>) 评论(<span id="post_comment_count">0</span>)  <a href="https://i.cnblogs.com/EditPosts.aspx?postid=5007016" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(5007016);return false;">收藏</a></div>
</div>